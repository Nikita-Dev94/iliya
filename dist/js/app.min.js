/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst swiper = new Swiper('.swiper', {\r\n\t// Optional parameters\r\n\t// If we need pagination\r\n\tpagination: {\r\n\t\tel: '.swiper-pagination',\r\n\t},\r\n\t// Navigation arrows\r\n\tnavigation: {\r\n\t\tnextEl: '.swiper-button-next',\r\n\t\tprevEl: '.swiper-button-prev',\r\n\t},\r\n\tautoHeight: true,\r\n\r\n});\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\t// конечная дата, например 1 июля 2021\r\n\tconst deadline = new Date(2023, 3, 1, 10);\r\n\t// id таймера\r\n\tlet timerId = null;\r\n\t// склонение числительных\r\n\tfunction declensionNum(num, words) {\r\n\t\treturn words[(num % 100 > 4 && num % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(num % 10 < 5) ? num % 10 : 5]];\r\n\t}\r\n\t// вычисляем разницу дат и устанавливаем оставшееся времени в качестве содержимого элементов\r\n\tfunction countdownTimer() {\r\n\t\tconst diff = deadline - new Date();\r\n\t\tif (diff <= 0) {\r\n\t\t\tclearInterval(timerId);\r\n\t\t}\r\n\t\tconst days = diff > 0 ? Math.floor(diff / 1000 / 60 / 60 / 24) : 0;\r\n\t\tconst hours = diff > 0 ? Math.floor(diff / 1000 / 60 / 60) % 24 : 0;\r\n\t\tconst minutes = diff > 0 ? Math.floor(diff / 1000 / 60) % 60 : 0;\r\n\t\tconst seconds = diff > 0 ? Math.floor(diff / 1000) % 60 : 0;\r\n\t\t$days.textContent = days < 10 ? '0' + days : days;\r\n\t\t$hours.textContent = hours < 10 ? '0' + hours : hours;\r\n\t\t$minutes.textContent = minutes < 10 ? '0' + minutes : minutes;\r\n\t\t$seconds.textContent = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n\t}\r\n\t// получаем элементы, содержащие компоненты даты\r\n\tconst $days = document.querySelector('.timer__days');\r\n\tconst $hours = document.querySelector('.timer__hours');\r\n\tconst $minutes = document.querySelector('.timer__minutes');\r\n\tconst $seconds = document.querySelector('.timer__seconds');\r\n\t// вызываем функцию countdownTimer\r\n\tcountdownTimer();\r\n\t// вызываем функцию countdownTimer каждую секунду\r\n\ttimerId = setInterval(countdownTimer, 1000);\r\n});\n\n//# sourceURL=webpack://08/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;